% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slm.R
\name{slm}
\alias{slm}
\title{Stochastic Levenberg Marquardt Algorithm
Minimizes the square sum of f(x,xdata), taking samples of xdata for calculating the steps}
\usage{
slm(
  f,
  x0,
  xdata,
  ydata,
  number_of_chunks,
  maxiter = 10000,
  return_Fn = FALSE,
  Jacobian = NULL,
  mu = 1,
  nu = 2,
  eps = 1e-05,
  max_mu = 1e+10
)
}
\arguments{
\item{f}{function to be optimized}

\item{x0}{initial guess of the multidimentional parameter to be optimized}

\item{xdata}{independent possibly multivariate variable where f is applied}

\item{ydata}{rowise monovariate variable given for each xdata}

\item{number_of_chunks}{number of samples from the data}

\item{maxiter}{maximum number of iteration}

\item{return_Fn}{whether the function values are returned}

\item{Jacobian}{optional, function that produces the Jacobian of f}

\item{mu}{initial mu parameter for Levenberg-Marquardt}

\item{nu}{initial nu parameter (it multiplies mu in adaptation)}

\item{eps}{epsilon value for Jacobian}

\item{max_mu}{maximum mu value}
}
\value{
a list containing the optimal x and other things
}
\description{
Stochastic Levenberg Marquardt Algorithm
Minimizes the square sum of f(x,xdata), taking samples of xdata for calculating the steps
}
\examples{


sum_of_Normals <- function(x, X){
  return(x["A1"] * exp(-(X[,"x1"] - x["mean1"])^2/x["sd1"]^2) +
         x["A2"] * exp(-(X[,"x2"] - x["mean2"])^2/x["sd2"]^2))
}

x = c(A1 = 12.3,mean1 = 24, sd1 = 17.3, A2 = 0.23,mean2 = 21.2 ,sd2 = 5)
X=cbind(runif(1e5) * 100 - 20, runif(1e5) * 100 - 20)
colnames(X)<-c('x1','x2')

Yn = sum_of_Normals(x,X)+rnorm(1e5)*0.2


opt=slm(f =sum_of_Normals, x0 = x, xdata = X, ydata = Yn,number_of_chunks = 100)

}
